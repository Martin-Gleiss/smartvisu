# Wellcome to the websocket driver for SmartVisu.  

  
## DESCRIPTION
This driver communicates with a websocket. If you've hurry, just copy/paste the NODE-RED flow below to start playing with the driver.
   

## How to use it
  * Create a websocket's node endpoint, listening on node-red default IP and Port (1880) on the "/smartvisu" path (for example, 192.168.1.18:1880/smartvisu).
  * Config the driver in the SmartVisu's config window, to point to your node-red IP and port. That's all.

## Protocol
  Send command to or update SmartVisu from: item=value (for example, if you use KNX: 0/1/0=1)
  When you open a page on SmartVisu, the driver sends a query with all the items in the page, separated by a pipe (|), ending by ?. 
  For example, if you use KNX: 0/1/0|0/1/1|2/1/5|3/1/4|2/4/7=?
  The NODE-RED node reads all the group addresses from the memory array and sends it back to the SmartVisu page.

  Here, a sample Flow in NODE-RED. This example uses the palette node-red-contrib-knxjs as well.
  Please copy/paste this flow in your NODE-RED flows.
  How it works: KNX Group Addresses updates the node "MSG Handler", by putting the group addresses value to an array in memory, then this array will serve the driver.
  I used a KNX node, but you can use anything you want.

## SAMPLE NODE


[{"id":"bd7e86ba.578828","type":"tab","label":"SmartVisu","disabled":false,"info":""},{"id":"94362075.d4214","type":"websocket in","z":"bd7e86ba.578828","name":"","server":"2a9e330b.69ea4c","client":"","x":120,"y":140,"wires":[["8699b684.85d6a8"]]},{"id":"a6c38c48.1533","type":"websocket out","z":"bd7e86ba.578828","name":"","server":"2a9e330b.69ea4c","client":"","x":1080,"y":140,"wires":[]},{"id":"9a8a6b37.4d8448","type":"debug","z":"bd7e86ba.578828","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":790,"y":80,"wires":[]},{"id":"278cf00f.f1d32","type":"function","z":"bd7e86ba.578828","name":"Msg Handler","func":"// Recupero l'array di valori precedentemente salvati\nvar aMessaggi=[];\nif (flow.get(\"aMessaggi\")||undefined!==undefined) {\n    aMessaggi=flow.get(\"aMessaggi\");\n}\n\n\n// Recupero l'item ed il suo valore dal payload\nvar sCurrentPayload=msg.payload.toString();\nvar sSchiave;\nvar sValore;\nvar sStato; // Nuovo valore oppure valore modificato\n\n// Verifico che ci sia un \"=\"\nif (sCurrentPayload.indexOf(\"=\")!==-1) {\n    sSchiave=sCurrentPayload.split(\"=\")[0]; \n    sValore=sCurrentPayload.split(\"=\")[1].replace(/\\n$/, \"\"); // Tolgo eventuale /n alla fine\n} else\n{\n    // Qualcosa non va.\n    node.status({fill:\"red\",shape:\"dot\",text:\"Error \" + sCurrentPayload + \"-> NO = DELIMITER\"});\n    // Salvo l'array nel flow\n    flow.set(\"aMessaggi\",aMessaggi);    \n    return;\n}\n\n\n\n// Se il payload contiene \"?\", è una richiesta di invio valore\n// ********************************************\nif (sValore==\"?\") {\n    // Cerco ed invio il valore\n    if (aMessaggi===undefined) {\n        // Non v'è nulla in memoria\n        sValore=\"\";\n        node.status({fill:\"green\",shape:\"dot\",text:\"Query \" + sSchiave + \"->\"+ sValore});\n        // Ho trovato l'item nell'array, lo modifico\n        sStato=\"NotFound\";\n        node.send({topic:\"DONTWRITEKNX\",payload:{\"Item\":sSchiave,\"Value\":sValore,\"Status\":sStato}});\n        // Salvo l'array nel flow\n        flow.set(\"aMessaggi\",aMessaggi);\n        return;\n    }else\n    {\n        // Se la chiave contiene \"|\", splitto le chiavi ed invio risposta per ciascuna chiave\n        if (sSchiave.indexOf(\"|\")!==-1)\n        {\n            var aChiavi=sSchiave.split(\"|\");\n            var i;\n            for (i = 0; i < aChiavi.length; i++) \n            { \n                sSchiave=aChiavi[i];\n                iIndice= aMessaggi.findIndex((a => a.chiave == sSchiave));    \n                if (iIndice!==-1) {\n                    sValore=aMessaggi[iIndice].valore;\n                    node.status({fill:\"green\",shape:\"dot\",text:\"Query \" + sSchiave + \"->\"+ sValore});\n                    // Ho trovato l'item nell'array, lo modifico\n                    sStato=\"Response\";\n                    node.send({topic:\"DONTWRITEKNX\",payload:{\"Item\":sSchiave,\"Value\":sValore,\"Status\":sStato}});\n                    // Salvo l'array nel flow\n                    flow.set(\"aMessaggi\",aMessaggi);\n                    \n                }\n                else\n                {\n                    // Non ho trovato il valore\n                    sValore=\"\";\n                    node.status({fill:\"green\",shape:\"dot\",text:\"Query \" + sSchiave + \"->\"+ sValore});\n                    // Ho trovato l'item nell'array, lo modifico\n                    sStato=\"NotFound\";\n                    node.send({topic:\"DONTWRITEKNX\",payload:{\"Item\":sSchiave,\"Value\":sValore,\"Status\":sStato}});\n                    // Salvo l'array nel flow\n                    flow.set(\"aMessaggi\",aMessaggi);\n                    \n                }\n            }\n            return;\n\n        }\n        else\n        {\n            iIndice= aMessaggi.findIndex((a => a.chiave == sSchiave));    \n            if (iIndice!==-1) {\n                sValore=aMessaggi[iIndice].valore;\n                node.status({fill:\"green\",shape:\"dot\",text:\"Query \" + sSchiave + \"->\"+ sValore});\n                // Ho trovato l'item nell'array, lo modifico\n                sStato=\"Response\";\n                node.send({topic:\"DONTWRITEKNX\",payload:{\"Item\":sSchiave,\"Value\":sValore,\"Status\":sStato}});\n                // Salvo l'array nel flow\n                flow.set(\"aMessaggi\",aMessaggi);\n                return;\n            }\n            else\n            {\n                // Non ho trovato il valore\n                sValore=\"\";\n                node.status({fill:\"green\",shape:\"dot\",text:\"Query \" + sSchiave + \"->\"+ sValore});\n                // Ho trovato l'item nell'array, lo modifico\n                sStato=\"NotFound\";\n                node.send({topic:\"DONTWRITEKNX\",payload:{\"Item\":sSchiave,\"Value\":sValore,\"Status\":sStato}});\n                // Salvo l'array nel flow\n                flow.set(\"aMessaggi\",aMessaggi);\n                return;\n            }\n        }\n    }\n}\n// ********************************************\n\n\n// Salvo la coppia item=valore in memoria\nvar iIndice;\nif (aMessaggi===undefined) {\n    iIndice=-1;\n}else\n{\n    iIndice= aMessaggi.findIndex((a => a.chiave == sSchiave));    \n}\n\nif (iIndice!==-1) {\n    node.status({fill:\"green\",shape:\"dot\",text:\"Found \" + sSchiave + \"=\"+ aMessaggi[iIndice].valore + \"->\" +sValore });\n    // Ho trovato l'item nell'array, lo modifico\n    aMessaggi[iIndice].valore=sValore;\n    sStato=\"Update\";\n}else\n{\n    // Non ho trovato la chiave\n    aMessaggi.push({chiave:sSchiave,valore:sValore});\n    node.status({fill:\"green\",shape:\"dot\",text:\"New \" + sSchiave + \"->\" +sValore });\n    sStato=\"New\";\n}\n\n// Salvo l'array nel flow\nflow.set(\"aMessaggi\",aMessaggi);\n\n\nnode.send({topic:msg.topic,payload:{\"Item\":sSchiave,\"Value\":sValore,\"Status\":sStato}});\n\n\n\n\n\n","outputs":1,"noerr":0,"x":590,"y":140,"wires":[["2bdfbde0.0267fa","1c8279cb.48ba4e","9a8a6b37.4d8448"]]},{"id":"21224596.6e50ba","type":"inject","z":"bd7e86ba.578828","name":"","topic":"","payload":"0/1/2=1","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":370,"y":80,"wires":[["278cf00f.f1d32"]]},{"id":"7d43d7f3.047ad8","type":"function","z":"bd7e86ba.578828","name":"DTP Auto","func":"if (msg.topic==\"knx: write\") {\n   if (msg.payload.value.length==1) {\n      msg.payload=msg.payload.dstgad +\"=\" + Converti(msg.payload.value.join(),\"1.001\",\"from\");\n        return msg;\n    }else if (msg.payload.value.length==16) {\n        msg.payload=msg.payload.dstgad +\"=\" + Converti(msg.payload.value.join(),\"5.001\",\"from\");\n        return msg;  \n        \n    }else if (msg.payload.value.length==2) {\n        msg.payload=msg.payload.dstgad +\"=\" + Converti(msg.payload.value,\"9.xxx\",\"from\");\n        return msg;  \n        \n    }else if (msg.payload.value.length==4) {\n        msg.payload=msg.payload.dstgad +\"=\" + Converti(msg.payload.value,\"13.xx\",\"from\");\n        return msg;  \n        \n    }\n\n}\n\n\n              \n\nfunction Converti (inputData, dataType, direction) {\n\n\t\tvar returnData = inputData;\n\t\tif (dataType == '9.xxx') {\n\n\t\t\tif (direction == 'from') {\n                // VALORE GENERICO PER TEMPERATURA, LUX, WATT, ECC...\n                var data = returnData;\n                // DPT bits high byte: MEEEEMMM, low byte: MMMMMMMM\n                // first M is signed state from two's complement notation\n                var val = 0;\n                var m = (((data[0] & 7) << 8) >>> 0) | (data[1] >>> 0);\n                var signed = ((data[0] & 128) >> 7) == 1;\n                if (signed)\n                {\n                    // change for two's complement notation and use only mantissa bytes\n                    m = m - 1;\n                    m = ~m;\n                    m = m & 2047 /* 0 | 0x07FF */;\n                    val = ((m * -1) | 0);\n                }\n                else\n                {\n                    val = (m | 0);\n                }\n                var power = (data[0] & 120) >> 3;\n                var calc = 0.01 * val;\n                var Temp = Math.round(calc * Math.pow(2, power), 2);\n                return Temp;\n\n\n                \n\t\t\t}\n\t\t}\n\t\telse if (dataType == '1.001') {\n\t\t\tif (direction == 'to') {\n\n\t\t\t\treturnData = '8' + inputData;\n\t\t\t}\n\t\t}\n\t\telse if (dataType == '13.xx') {\n\t\t    \n\t\t    // Create a buffer\n            var buf = new ArrayBuffer(4);\n            // Create a data view of it\n            var view = new DataView(buf);\n            \n            // set bytes\n            inputData.forEach(function (b, i) {\n                view.setUint8(i, b);\n            });\n            \n            // Read the bits as a float; note that by doing this, we're implicitly\n            // converting it from a 32-bit float into JavaScript's native 64-bit double\n            var num = view.getFloat32(0);\n\n\t\t\treturnData = Math.round(num*100)/100;\n\t\t}\n\t\telse if (dataType == '5.001') {\n\n\t\t\tif (direction == 'from') {\n\n\t\t\t\treturnData = inputData;\n\t\t\t\t//returnData = Math.round(parseInt(inputData, 10) / 2.55);\n\n\n\t\t\t}\n\t\t\telse if (direction == 'to') {\n\n\t\t\t\treturnData = inputData;\n\t\t\t\treturnData = Math.round(inputData * 2.55) + 0x8000;\n\t\t\t\treturnData = returnData.toString(16);\n\t\t\t}\n\n\t\t}\n\t\treturn returnData;\n\t}","outputs":1,"noerr":0,"x":200,"y":220,"wires":[["aef91f8.898a1e"]]},{"id":"4ad1c18f.e8417","type":"knx-in","z":"bd7e86ba.578828","name":"","controller":"48ec24a.fd7aadc","x":70,"y":220,"wires":[["7d43d7f3.047ad8"]]},{"id":"2bdfbde0.0267fa","type":"function","z":"bd7e86ba.578828","name":"Formatter To Smartvisu","func":"return {payload:msg.payload.Item + \"=\" + msg.payload.Value + \"\\n\"};","outputs":1,"noerr":0,"x":830,"y":140,"wires":[["a6c38c48.1533"]]},{"id":"19be1b70.b414d5","type":"knx-out","z":"bd7e86ba.578828","name":"","controller":"48ec24a.fd7aadc","x":1050,"y":200,"wires":[]},{"id":"1c8279cb.48ba4e","type":"function","z":"bd7e86ba.578828","name":"Formatter To KNX","func":"// WORK IN PROGRESS.... CURRENTLY SENDS OUT TO KNX ONLY DTP1 TELEGRAMS\n\n// Invio a KNX solo se il messaggio proviene da Websocket, altrimenti ho un loop infinito\nif (msg.topic==\"FromWebsocket\")\n{\n    // Cambio il DTP in base al GroupAddress\n    var sDTP=\"DPT1\";\n    var sOut=\"\";\n    if (msg.payload.Value==\"0\" || msg.payload.Value==\"1\" )\n    {\n        // Deve essere per forza un boolean\n        sDTP=\"DPT1\"\n    }\n    \n    sOut=({\"topic\":\"write\",\"payload\":{\"srcphy\":\"\",\n          \"dstgad\":msg.payload.Item, \"dpt\":sDTP,\n          \"value\":msg.payload.Value}});\n          \n    return sOut;    \n}\n","outputs":1,"noerr":0,"x":810,"y":200,"wires":[["19be1b70.b414d5"]]},{"id":"8699b684.85d6a8","type":"change","z":"bd7e86ba.578828","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"FromWebsocket","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":380,"y":140,"wires":[["278cf00f.f1d32"]]},{"id":"aef91f8.898a1e","type":"change","z":"bd7e86ba.578828","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"FromKNX","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":380,"y":220,"wires":[["278cf00f.f1d32"]]},{"id":"2a9e330b.69ea4c","type":"websocket-listener","z":"","path":"/smartvisu","wholemsg":"false"},{"id":"48ec24a.fd7aadc","type":"knx-controller","z":"","ipAddr":"224.0.23.12","ipPort":"3671","physAddr":"15.15.100"}]


