var io={adress:"",port:"",read:function(e){},write:function(e,o){io.send(e+"="+o+"\n"),widget.update(e,o)},trigger:function(e,o){io.send(e+"="+o+"\n")},init:function(e,o){io.address=e,io.port=o,io.open(),io.CheckConnection()},run:function(e){widget.refresh(),io.ReadAll()},version:3,socket:!0,tConn:0,CheckConnection:function(){io.tConn=setTimeout("io.CheckConnection();",3e3),0!=io.socket.readyState&&1!=io.socket.readyState&&(io.close(),io.open())},open:function(){io.socket=new WebSocket("ws://"+io.address+":"+io.port+"/somesecurity"),io.socket.onopen=function(){io.ReadAll()},io.socket.onmessage=function(e){var o=e.data;if(-1!=(o=o.replace(/\n$/,"")).indexOf("|")){var n=o.split("|");for(index=0;index<n.length;++index)widget.update(n[index].split("=")[0],n[index].split("=")[1])}else-1!=o.indexOf("=")&&widget.update(o.split("=")[0],o.split("=")[1])},io.socket.onerror=function(e){notify.error("Driver: TCP","Could not connect to server!<br /> Retry... <br />"+e.data+".")},io.socket.onclose=function(){notify.debug("Driver: TCP","Connection closed to server!<br /> Retry... ")}},send:function(e){1==io.socket.readyState&&io.socket.send(e)},ReadAll:function(){var e="";if(widget.listeners().length){for(var o=widget.listeners(),n=0;n<widget.listeners().length;n++)-1==e.indexOf(o[n])&&(e+=o[n]+"|");e=e.substr(0,e.length-1),1==io.socket.readyState&&io.send(e+"=?\n")}},close:function(){console.log("[io.genericTCP] close connection"),0<io.socket.readyState&&io.socket.close(),io.socket=null}};